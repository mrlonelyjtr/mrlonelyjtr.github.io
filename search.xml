[{"title":"[hihoCoder] Problem 1288 - Font Size","url":"http://yoursite.com/2017/04/01/hihoCoder-Problem-1288-Font-Size/","content":"<p>Steven loves reading book on his phone. The book he reads now consists of N paragraphs and the i-th paragraph contains ai characters.</p>\n<p>Steven wants to make the characters easier to read, so he decides to increase the font size of characters. But the size of Steven’s phone screen is limited. Its width is W and height is H. As a result, if the font size of characters is S then it can only show ⌊W / S⌋ characters in a line and ⌊H / S⌋ lines in a page. (⌊x⌋ is the largest integer no more than x)  </p>\n<p>So here’s the question, if Steven wants to control the number of pages no more than P, what’s the maximum font size he can set? Note that paragraphs must start in a new line and there is no empty line between paragraphs.</p>\n<p>Time Limit:10000ms<br>Case Time Limit:1000ms<br>Memory Limit:256MB</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>Input may contain multiple test cases.</p>\n<p>The first line is an integer TASKS, representing the number of test cases.</p>\n<p>For each test case, the first line contains four integers N, P, W and H, as described above.</p>\n<p>The second line contains N integers a1, a2, … aN, indicating the number of characters in each paragraph.</p>\n<p>For all test cases,</p>\n<p>1 &lt;= N &lt;= 10^3,</p>\n<p>1 &lt;= W, H, ai &lt;= 10^3,</p>\n<p>1 &lt;= P &lt;= 10^6,</p>\n<p>There is always a way to control the number of pages no more than P.</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>For each testcase, output a line with an integer Ans, indicating the maximum font size Steven can set.</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><p>2<br>1 10 4 3<br>10<br>2 10 4 3<br>10 10</p>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><p>3<br>2</p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> t = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; t; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> p = sc.nextInt();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> w = sc.nextInt();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> h = sc.nextInt();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span> || n &gt; <span class=\"number\">1000</span> || w &lt; <span class=\"number\">1</span> || w &gt; <span class=\"number\">1000</span> || h &lt; <span class=\"number\">1</span> || h &gt; <span class=\"number\">1000</span> || p &lt; <span class=\"number\">1</span> || p &gt; <span class=\"number\">1000000</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> x = sc.nextInt();</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (x &lt; <span class=\"number\">1</span> || x &gt; <span class=\"number\">1000</span>)</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\ta[j] = x;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> result = binarySearch(w, h, p, a);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tSystem.out.println(result);</div><div class=\"line\">\t\t&#125;\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">validatePages</span><span class=\"params\">(<span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span>[] a)</span> </span>&#123;\t\t</div><div class=\"line\">        <span class=\"keyword\">double</span> charactersPerLine = w / mid;</div><div class=\"line\">        <span class=\"keyword\">double</span> linesPerPage = h / mid;</div><div class=\"line\">        <span class=\"keyword\">int</span> lines = <span class=\"number\">0</span>;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.length; i++)</div><div class=\"line\">        \tlines += Math.ceil(a[i] / charactersPerLine);</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">double</span> pages = Math.ceil(lines / linesPerPage);</div><div class=\"line\">\t\t</div><div class=\"line\">        <span class=\"keyword\">return</span> pages;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">binarySearch</span><span class=\"params\">(<span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> p, <span class=\"keyword\">int</span>[] a)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> left = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> right = Math.min(w, h);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">        <span class=\"keyword\">while</span> (left &lt;= right)&#123;</div><div class=\"line\">            <span class=\"keyword\">int</span> mid = (left + right) / <span class=\"number\">2</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (validatePages(mid, w, h, a) &lt;= p)&#123;</div><div class=\"line\">            \tresult = mid;</div><div class=\"line\">            \tleft = mid + <span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span> </div><div class=\"line\">            \tright = mid - <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["Algorithm"],"tags":["OJ","Algorithm"]},{"title":"[LightOJ] Problem 1138 - Trailing Zeroes (III)","url":"http://yoursite.com/2017/04/01/LightOJ-Problem-1138-Trailing-Zeroes-III/","content":"<p>You task is to find minimal natural number N, so that N! contains exactly Q zeroes on the trail in decimal notation. As you know N! = 1<em>2</em>…*N. For example, 5! = 120, 120 contains one zero on the trail.</p>\n<p>Time Limit: 2 second(s)<br>Memory Limit: 32 MB</p>\n<p>小明学习数学的时候遇到了两个新奇的函数f(x)和g(x)。f(x)的值为x的阶乘后导0的个数。g(x)的值为满足f(y)=x的最小值y，如果不存在y使f(y)=x, 那么g(x)的值为-1。现在小明已经知道如何计算f(x)了，他想让你帮他写段程序来计算g(x)。</p>\n<p>Hint<br>0!=1，1!=1，2!=1<em>2=2， 3!=1</em>2<em>3=6，4!=1</em>2<em>3</em>4=24，5!=1<em>2</em>3<em>4</em>5=120，5是最小数字使f(x)为1<br>为了清楚的表述，可引入另外一个函数h(x, p)为x的阶乘中因子p的个数。那么f(x) = h(x, 10)我们把10分解质因子10=2*5。那么有f(x) = min(h(x, 2), h(x, 5))。显然h(x, 2) &gt;= h(x, 5)，所以f(x)=h(x, 5)。我们可以推断出f(x)是一个非递减函数</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>Input starts with an integer T (≤ 10000), denoting the number of test cases.</p>\n<p>Each case contains an integer Q (1 ≤ Q ≤ 10^8) in a line.</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>For each case, print the case number and N. If no solution is found then print ‘impossible’.</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><p>3<br>1<br>2<br>5</p>\n<h2 id=\"Output-for-Sample-Input\"><a href=\"#Output-for-Sample-Input\" class=\"headerlink\" title=\"Output for Sample Input\"></a>Output for Sample Input</h2><p>Case 1: 5<br>Case 2: 10<br>Case 3: impossible</p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> t = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (t &lt; <span class=\"number\">1</span> || t &gt; <span class=\"number\">10000</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= t; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> x = sc.nextInt();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x &lt; <span class=\"number\">1</span> || x &gt; Math.pow(<span class=\"number\">10</span>, <span class=\"number\">8</span>))</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">long</span> result = binarySearch(<span class=\"number\">1</span>, Long.MAX_VALUE, x);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (result != -<span class=\"number\">1</span>)</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"Case \"</span> + i + <span class=\"string\">\": \"</span> + result);</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"Case \"</span> + i + <span class=\"string\">\": impossible\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">trailingZeroes</span><span class=\"params\">(<span class=\"keyword\">long</span> n)</span> </span>&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> n == <span class=\"number\">0</span> ? <span class=\"number\">0</span> : n / <span class=\"number\">5</span> + trailingZeroes(n / <span class=\"number\">5</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">binarySearch</span><span class=\"params\">(<span class=\"keyword\">long</span> left, <span class=\"keyword\">long</span> right, <span class=\"keyword\">long</span> key)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">while</span> (left &lt;= right)&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> mid = (left + right) / <span class=\"number\">2</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (trailingZeroes(mid) == key &amp;&amp; trailingZeroes(mid - <span class=\"number\">1</span>) &lt; key) </div><div class=\"line\">            \t<span class=\"keyword\">return</span> mid;</div><div class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (trailingZeroes(mid) &lt; key) </div><div class=\"line\">            \tleft = mid + <span class=\"number\">1</span>;</div><div class=\"line\">            <span class=\"keyword\">else</span> </div><div class=\"line\">            \tright = mid - <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["Algorithm"],"tags":["OJ","Algorithm"]},{"title":"Algorithm from NowCoder (4)","url":"http://yoursite.com/2017/03/27/Algorithm-from-NowCoder-4/","content":"<h2 id=\"No-1-好多鱼！\"><a href=\"#No-1-好多鱼！\" class=\"headerlink\" title=\"No. 1 好多鱼！\"></a>No. 1 好多鱼！</h2><p>牛牛有一个鱼缸。鱼缸里面已经有n条鱼，每条鱼的大小为fishSize[i] (1 ≤ i ≤ n,均为正整数)，牛牛现在想把新捕捉的鱼放入鱼缸。鱼缸内存在着大鱼吃小鱼的定律。经过观察，牛牛发现一条鱼A的大小为另外一条鱼B大小的2倍到10倍(包括2倍大小和10倍大小)，鱼A会吃掉鱼B。考虑到这个，牛牛要放入的鱼就需要保证：<br>1、放进去的鱼是安全的，不会被其他鱼吃掉<br>2、这条鱼放进去也不能吃掉其他鱼<br>鱼缸里面已经存在的鱼已经相处了很久，不考虑他们互相捕食。现在知道新放入鱼的大小范围[minSize,maxSize](考虑鱼的大小都是整数表示),牛牛想知道有多少种大小的鱼可以放入这个鱼缸。</p>\n<h3 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入数据包括3行.<br>第一行为新放入鱼的尺寸范围minSize,maxSize(1 ≤ minSize,maxSize ≤ 1000)，以空格分隔。</p>\n<p>第二行为鱼缸里面已经有鱼的数量n(1 ≤ n ≤ 50)</p>\n<p>第三行为已经有的鱼的大小fishSize[i](1 ≤ fishSize[i] ≤ 1000)，以空格分隔。</p>\n<h3 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出有多少种大小的鱼可以放入这个鱼缸。考虑鱼的大小都是整数表示</p>\n<h3 id=\"输入例子\"><a href=\"#输入例子\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>1 12<br>1<br>1</p>\n<h3 id=\"输出例子\"><a href=\"#输出例子\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>3</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> minSize = sc.nextInt();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> maxSize = sc.nextInt();</div><div class=\"line\">        <span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (minSize &lt; <span class=\"number\">1</span> || minSize &gt; <span class=\"number\">1000</span> || maxSize &lt; <span class=\"number\">1</span> || maxSize &gt; <span class=\"number\">1000</span> || n &lt; <span class=\"number\">1</span> || n &gt; <span class=\"number\">50</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[] fishSize = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> x = sc.nextInt();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x &lt; <span class=\"number\">1</span> || x &gt; <span class=\"number\">1000</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tfishSize[i] = x;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = minSize; i &lt;= maxSize; i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">boolean</span> isEaten = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n &amp;&amp; isEaten == <span class=\"keyword\">false</span>; j++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> ((i &lt;= fishSize[j] * <span class=\"number\">10</span> &amp;&amp; i &gt;= fishSize[j] * <span class=\"number\">2</span>) || (<span class=\"number\">10</span> * i &gt;= fishSize[j] &amp;&amp; <span class=\"number\">2</span> * i &lt;= fishSize[j]))</div><div class=\"line\">\t\t\t\t\tisEaten = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!isEaten)</div><div class=\"line\">\t\t\t\tcount++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\tSystem.out.println(count);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-2-循环单词\"><a href=\"#No-2-循环单词\" class=\"headerlink\" title=\"No. 2 循环单词\"></a>No. 2 循环单词</h2><p>如果一个单词通过循环右移获得的单词，我们称这些单词都为一种循环单词。 例如：picture 和 turepic 就是属于同一种循环单词。 现在给出n个单词，需要统计这个n个单词中有多少种循环单词。 </p>\n<h3 id=\"输入描述-1\"><a href=\"#输入描述-1\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入包括n+1行：</p>\n<p>第一行为单词个数n(1 ≤ n ≤ 50)</p>\n<p>接下来的n行，每行一个单词word[i]，长度length(1 ≤ length ≤ 50)。由小写字母构成</p>\n<h3 id=\"输出描述-1\"><a href=\"#输出描述-1\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出循环单词的种数</p>\n<h3 id=\"输入例子-1\"><a href=\"#输入例子-1\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>5<br>picture<br>turepic<br>icturep<br>word<br>ordw</p>\n<h3 id=\"输出例子-1\"><a href=\"#输出例子-1\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span> || n &gt; <span class=\"number\">50</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tString[] word = <span class=\"keyword\">new</span> String[n];</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\tString str = sc.next();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (str.length() &lt; <span class=\"number\">1</span> || str.length() &gt; <span class=\"number\">50</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tword[i] =str;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tArrayList&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\tString str = word[i];</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!list.contains(str))&#123;</div><div class=\"line\">\t\t\t\tlist.add(str);</div><div class=\"line\">\t\t\t\tcount++;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; str.length(); j++)&#123;</div><div class=\"line\">\t\t\t\t\tString newString = <span class=\"keyword\">new</span> String();</div><div class=\"line\">\t\t\t\t\t</div><div class=\"line\"><span class=\"comment\">//\t\t\t\t\tnewString = str.substring(j) + str.substring(0, j);</span></div><div class=\"line\">\t\t\t\t\t</div><div class=\"line\">\t\t\t\t\tnewString = str + str;</div><div class=\"line\">\t\t\t\t\tnewString = newString.substring(j, j + str.length());</div><div class=\"line\">\t\t\t\t\t</div><div class=\"line\">\t\t\t\t\tlist.add(newString);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(count);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-3-DNA合成\"><a href=\"#No-3-DNA合成\" class=\"headerlink\" title=\"No. 3 DNA合成\"></a>No. 3 DNA合成</h2><p>DNA分子是以4种脱氧核苷酸为单位连接而成的长链，这4种脱氧核苷酸分别含有A,T,C,G四种碱基。碱基互补配对原则：A和T是配对的，C和G是配对的。如果两条碱基链长度是相同的并且每个位置的碱基是配对的，那么他们就可以配对合成为DNA的双螺旋结构。现在给出两条碱基链，允许在其中一条上做替换操作：把序列上的某个位置的碱基更换为另外一种碱基。问最少需要多少次让两条碱基链配对成功 </p>\n<h3 id=\"输入描述-2\"><a href=\"#输入描述-2\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入包括一行：<br>包括两个字符串,分别表示两条链,两个字符串长度相同且长度均小于等于50。</p>\n<h3 id=\"输出描述-2\"><a href=\"#输出描述-2\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一个整数，即最少需要多少次让两条碱基链配对成功</p>\n<h3 id=\"输入例子-2\"><a href=\"#输入例子-2\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>ACGT TGCA</p>\n<h3 id=\"输出例子-2\"><a href=\"#输出例子-2\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>0</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tString str1 = sc.next();</div><div class=\"line\">\t\tString str2 = sc.next();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (str1.length() != str2.length() || str1.length() &gt; <span class=\"number\">50</span> || str2.length() &gt; <span class=\"number\">50</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> a = <span class=\"string\">'A'</span> + <span class=\"string\">'T'</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> b = <span class=\"string\">'C'</span> + <span class=\"string\">'G'</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; str1.length(); i++)&#123;</div><div class=\"line\"><span class=\"comment\">//\t\t\tif ((str1.charAt(i) == 'A' &amp;&amp; str2.charAt(i) == 'T') || (str1.charAt(i) == 'T' &amp;&amp; str2.charAt(i) == 'A') || </span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\t\t(str1.charAt(i) == 'C' &amp;&amp; str2.charAt(i) == 'G') || (str1.charAt(i) == 'G' &amp;&amp; str2.charAt(i) == 'C'))</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\tcount++;</span></div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> c = str1.charAt(i) + str2.charAt(i);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a != c &amp;&amp; b != c)</div><div class=\"line\">\t\t\t\tcount++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\"><span class=\"comment\">//\t\tSystem.out.println(str1.length() - count);</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(count);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-4-连续整数\"><a href=\"#No-4-连续整数\" class=\"headerlink\" title=\"No. 4 连续整数\"></a>No. 4 连续整数</h2><p>牛牛的好朋友羊羊在纸上写了n+1个整数，羊羊接着抹除掉了一个整数，给牛牛猜他抹除掉的数字是什么。牛牛知道羊羊写的整数神排序之后是一串连续的正整数，牛牛现在要猜出所有可能是抹除掉的整数。例如：<br>10 7 12 8 11 那么抹除掉的整数只可能是9<br>5 6 7 8 那么抹除掉的整数可能是4也可能是9</p>\n<h3 id=\"输入描述-3\"><a href=\"#输入描述-3\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入包括2行：</p>\n<p>第一行为整数n(1 &lt;= n &lt;= 50)，即抹除一个数之后剩下的数字个数</p>\n<p>第二行为n个整数num[i] (1 &lt;= num[i] &lt;= 1000000000)</p>\n<h3 id=\"输出描述-3\"><a href=\"#输出描述-3\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>在一行中输出所有可能是抹除掉的数,从小到大输出,用空格分割,行末无空格。如果没有可能的数，则输出mistake</p>\n<h3 id=\"输入例子-3\"><a href=\"#输入例子-3\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>2<br>3 6</p>\n<h3 id=\"输出例子-3\"><a href=\"#输出例子-3\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>mistake</p>\n<h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span> || n &gt; <span class=\"number\">50</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\"><span class=\"comment\">//\t\tint[] num = new int[n];</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> min = <span class=\"number\">1000000001</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> max = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> x = sc.nextInt();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x &lt; <span class=\"number\">1</span> || x &gt; <span class=\"number\">1000000000</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\"><span class=\"comment\">//\t\t\tnum[i] = x;</span></div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x &lt; min)</div><div class=\"line\">\t\t\t\tmin = x;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x &gt; max)</div><div class=\"line\">\t\t\t\tmax = x;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tres ^= x;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\"><span class=\"comment\">//\t\tArrays.sort(num);</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tfor (int i = 0; i &lt; n - 1; i++)&#123;</span></div><div class=\"line\"><span class=\"comment\">//\t\t\tif (num[i] == num[i+1])&#123;</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\tSystem.out.println(\"mistake\");</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\treturn;</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t&#125;</span></div><div class=\"line\"><span class=\"comment\">//\t\t&#125;</span></div><div class=\"line\"><span class=\"comment\">//\t\t</span></div><div class=\"line\"><span class=\"comment\">//\t\tif (num[n-1] - num[0] == n)&#123;</span></div><div class=\"line\"><span class=\"comment\">//\t\t\tfor (int i = 0; i &lt; n - 1; i++)&#123;</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\tif (num[i+1] - num[i] != 1)</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\t\tSystem.out.println(num[i] + 1);</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t&#125;</span></div><div class=\"line\"><span class=\"comment\">//\t\t&#125;</span></div><div class=\"line\"><span class=\"comment\">//\t\telse if (num[n-1] - num[0] == n - 1) &#123;</span></div><div class=\"line\"><span class=\"comment\">//\t\t\tif (num[0] == 1)</span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\tSystem.out.println(num[n-1] + 1);</span></div><div class=\"line\"><span class=\"comment\">//\t\t\telse </span></div><div class=\"line\"><span class=\"comment\">//\t\t\t\tSystem.out.println((num[0] - 1) + \" \" + (num[n-1] + 1));</span></div><div class=\"line\"><span class=\"comment\">//\t\t&#125;</span></div><div class=\"line\"><span class=\"comment\">//\t\telse</span></div><div class=\"line\"><span class=\"comment\">//\t\t\tSystem.out.println(\"mistake\");</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = min; i &lt;= max; i++)</div><div class=\"line\">\t\t\tres ^= i;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (res == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (min != <span class=\"number\">1</span>)</div><div class=\"line\">\t\t\t\tSystem.out.println((min - <span class=\"number\">1</span>) + <span class=\"string\">\" \"</span> + (max + <span class=\"number\">1</span>));</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t\tSystem.out.println(max + <span class=\"number\">1</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (res &lt;= min || res &gt;= max)</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"mistake\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\tSystem.out.println(res);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-5-超级素数幂\"><a href=\"#No-5-超级素数幂\" class=\"headerlink\" title=\"No. 5 超级素数幂\"></a>No. 5 超级素数幂</h2><p>如果一个数字能表示为p^q(^表示幂运算)且p为一个素数,q为大于1的正整数就称这个数叫做超级素数幂。现在给出一个正整数n,如果n是一个超级素数幂需要找出对应的p,q。</p>\n<h3 id=\"输入描述-4\"><a href=\"#输入描述-4\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入一个正整数n(2 ≤ n ≤ 10^18)</p>\n<h3 id=\"输出描述-4\"><a href=\"#输出描述-4\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>如果n是一个超级素数幂则输出p,q,以空格分隔,行末无空格。<br>如果n不是超级素数幂，则输出No</p>\n<h3 id=\"输入例子-4\"><a href=\"#输入例子-4\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>27</p>\n<h3 id=\"输出例子-4\"><a href=\"#输出例子-4\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>3 3</p>\n<h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> n = sc.nextLong();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">2</span> || n &gt; Math.pow(<span class=\"number\">10</span>, <span class=\"number\">18</span>))</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">long</span> q = <span class=\"number\">2</span>; q &lt;= Math.log(n) / Math.log(<span class=\"number\">2</span>); q++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">double</span> p = Math.pow(n, <span class=\"number\">1</span>d / q);</div><div class=\"line\">\t\t\t<span class=\"keyword\">boolean</span> isPrime = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= Math.sqrt(p) &amp;&amp; isPrime == <span class=\"keyword\">true</span>; i++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (p % i == <span class=\"number\">0</span>)</div><div class=\"line\">\t\t\t\t\tisPrime = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((<span class=\"keyword\">long</span>) p == p &amp;&amp; isPrime == <span class=\"keyword\">true</span>)&#123;</div><div class=\"line\">\t\t\t\tSystem.out.println((<span class=\"keyword\">long</span>) p + <span class=\"string\">\" \"</span> + q);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"No\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-6-序列和\"><a href=\"#No-6-序列和\" class=\"headerlink\" title=\"No. 6 序列和\"></a>No. 6 序列和</h2><p>给出一个正整数N和长度L，找出一段长度大于等于L的连续非负整数，他们的和恰好为N。答案可能有多个，我我们需要找出长度最小的那个。<br>例如 N = 18 L = 2：<br>5 + 6 + 7 = 18<br>3 + 4 + 5 + 6 = 18<br>都是满足要求的，但是我们输出更短的 5 6 7</p>\n<h3 id=\"输入描述-5\"><a href=\"#输入描述-5\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入数据包括一行：<br>两个正整数N(1 ≤ N ≤ 1000000000),L(2 ≤ L ≤ 100)</p>\n<h3 id=\"输出描述-5\"><a href=\"#输出描述-5\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>从小到大输出这段连续非负整数，以空格分隔，行末无空格。如果没有这样的序列或者找出的序列长度大于100，则输出No</p>\n<h3 id=\"输入例子-5\"><a href=\"#输入例子-5\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>18 2</p>\n<h3 id=\"输出例子-5\"><a href=\"#输出例子-5\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>5 6 7</p>\n<h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> l = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span> || n &gt; <span class=\"number\">1000000000</span> || l &lt; <span class=\"number\">2</span> || l &gt; <span class=\"number\">100</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = l; i &lt;= <span class=\"number\">100</span>; i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> ((<span class=\"number\">2</span> * n - i * i + i) % (<span class=\"number\">2</span> * i) == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> a = (<span class=\"number\">2</span> * n - i * i + i) / (<span class=\"number\">2</span> * i);</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i - <span class=\"number\">1</span>; j++)</div><div class=\"line\">\t\t\t\t\tSystem.out.print(a + j + <span class=\"string\">\" \"</span>);</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\tSystem.out.print(a + i - <span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"No\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-7-页码统计\"><a href=\"#No-7-页码统计\" class=\"headerlink\" title=\"No. 7 页码统计\"></a>No. 7 页码统计</h2><p>牛牛新买了一本算法书，算法书一共有n页，页码从1到n。牛牛于是想了一个算法题目：在这本算法书页码中0~9每个数字分别出现了多少次？</p>\n<h3 id=\"输入描述-6\"><a href=\"#输入描述-6\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入包括一个整数n(1 ≤ n ≤ 1,000,000,000)</p>\n<h3 id=\"输出描述-6\"><a href=\"#输出描述-6\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出包括一行10个整数，即0~9这些数字在页码中出现的次数，以空格分隔。行末无空格。</p>\n<h3 id=\"输入例子-6\"><a href=\"#输入例子-6\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>999</p>\n<h3 id=\"输出例子-6\"><a href=\"#输出例子-6\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>189 300 300 300 300 300 300 300 300 300</p>\n<h3 id=\"代码-6\"><a href=\"#代码-6\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>","categories":["Algorithm"],"tags":["OJ","Algorithm"]},{"title":"Algorithm from NowCoder (3)","url":"http://yoursite.com/2017/03/25/Algorithm-from-NowCoder-3/","content":"<h2 id=\"No-1-构造回文\"><a href=\"#No-1-构造回文\" class=\"headerlink\" title=\"No. 1 构造回文\"></a>No. 1 构造回文</h2><p>给定一个字符串s，你可以从中删除一些字符，使得剩下的串是一个回文串。如何删除才能使得回文串最长呢？<br>输出需要删除的字符个数。</p>\n<h3 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入数据有多组，每组包含一个字符串s，且保证:1&lt;=s.length&lt;=1000.</p>\n<h3 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>对于每组数据，输出一个整数，代表最少需要删除的字符个数。</p>\n<h3 id=\"输入例子\"><a href=\"#输入例子\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>abcda<br>google</p>\n<h3 id=\"输出例子\"><a href=\"#输出例子\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2<br>2</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (sc.hasNextLine()) &#123;</div><div class=\"line\">\t\t\tString str = sc.nextLine();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (str.length() &lt; <span class=\"number\">1</span> || str.length() &gt; <span class=\"number\">1000</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span>[][] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[str.length()+<span class=\"number\">1</span>][str.length()+<span class=\"number\">1</span>];</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= str.length(); i++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= str.length(); j++)&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (str.charAt(i-<span class=\"number\">1</span>) == str.charAt(str.length()-j))</div><div class=\"line\">\t\t\t\t\t\tdp[i][j] = dp[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>] + <span class=\"number\">1</span>;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t\t\t\tdp[i][j] = Math.max(dp[i-<span class=\"number\">1</span>][j], dp[i][j-<span class=\"number\">1</span>]);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t\tSystem.out.println(str.length() - dp[str.length()][str.length()]);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-2-算法基础-字符移位\"><a href=\"#No-2-算法基础-字符移位\" class=\"headerlink\" title=\"No. 2 算法基础-字符移位\"></a>No. 2 算法基础-字符移位</h2><p>小Q最近遇到了一个难题：把一个字符串的大写字母放到字符串的后面，各个字符的相对位置不变，且不能申请额外的空间。<br>你能帮帮小Q吗？</p>\n<h3 id=\"输入描述-1\"><a href=\"#输入描述-1\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入数据有多组，每组包含一个字符串s，且保证:1&lt;=s.length&lt;=1000.</p>\n<h3 id=\"输出描述-1\"><a href=\"#输出描述-1\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>对于每组数据，输出移位后的字符串。</p>\n<h3 id=\"输入例子-1\"><a href=\"#输入例子-1\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>AkleBiCeilD</p>\n<h3 id=\"输出例子-1\"><a href=\"#输出例子-1\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>kleieilABCD</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (sc.hasNextLine()) &#123;</div><div class=\"line\">\t\t\tString str = sc.nextLine();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (str.length() &lt; <span class=\"number\">1</span> || str.length() &gt; <span class=\"number\">1000</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">char</span>[] ch = str.toCharArray();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = ch.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (ch[i] &gt;= <span class=\"string\">'A'</span> &amp;&amp; ch[i] &lt;= <span class=\"string\">'Z'</span>)&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt;= ch.length - <span class=\"number\">2</span>; j++)&#123;</div><div class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (!Character.isUpperCase(ch[j+<span class=\"number\">1</span>]))&#123;\t</div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">char</span> temp = ch[j+<span class=\"number\">1</span>];</div><div class=\"line\">\t\t\t\t\t\t\tch[j+<span class=\"number\">1</span>] = ch[j];</div><div class=\"line\">\t\t\t\t\t\t\tch[j] = temp;</div><div class=\"line\">\t\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tSystem.out.println(String.valueOf(ch));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-3-有趣的数字\"><a href=\"#No-3-有趣的数字\" class=\"headerlink\" title=\"No. 3 有趣的数字\"></a>No. 3 有趣的数字</h2><p>小Q今天在上厕所时想到了这个问题：有n个数，两两组成二元组，差最小的有多少对呢？差最大呢？</p>\n<h3 id=\"输入描述-2\"><a href=\"#输入描述-2\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入包含多组测试数据。</p>\n<p>对于每组测试数据：</p>\n<p>N - 本组测试数据有n个数</p>\n<p>a1,a2…an - 需要计算的数据</p>\n<p>保证:</p>\n<p>1&lt;=N&lt;=100000,0&lt;=ai&lt;=INT_MAX.</p>\n<h3 id=\"输出描述-2\"><a href=\"#输出描述-2\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>对于每组数据，输出两个数，第一个数表示差最小的对数，第二个数表示差最大的对数。</p>\n<h3 id=\"输入例子-2\"><a href=\"#输入例子-2\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>6<br>45 12 45 32 5 6</p>\n<h3 id=\"输出例子-2\"><a href=\"#输出例子-2\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>1 2</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (sc.hasNext()) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span> || n &gt; <span class=\"number\">100000</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> x = sc.nextInt();</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span> || x &gt; Integer.MAX_VALUE)</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\ta[i] = x;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tArrays.sort(a);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[<span class=\"number\">0</span>] == a[n-<span class=\"number\">1</span>])&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> x = n * (n - <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</div><div class=\"line\">\t\t\t\tSystem.out.println(x + <span class=\"string\">\" \"</span> + x);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tMap&lt;Integer, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;Integer, Integer&gt;();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (map.containsKey(a[i]))</div><div class=\"line\">\t\t\t\t\tmap.put(a[i], map.get(a[i]) + <span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t\t\tmap.put(a[i], <span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> maxCount = map.get(a[<span class=\"number\">0</span>]) * map.get(a[n-<span class=\"number\">1</span>]);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> minCount = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (map.size() == n)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> min = a[<span class=\"number\">1</span>] - a[<span class=\"number\">0</span>];</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> x = a[i] - a[i-<span class=\"number\">1</span>];</div><div class=\"line\">\t\t\t\t\t</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (x &lt; min)&#123;</div><div class=\"line\">\t\t\t\t\t\tmin = x;</div><div class=\"line\">\t\t\t\t\t\tminCount = <span class=\"number\">1</span>;</div><div class=\"line\">\t\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x == min)</div><div class=\"line\">\t\t\t\t\t\tminCount++;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (Integer key : map.keySet())&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> x = map.get(key);</div><div class=\"line\">\t\t\t\t\t</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (x &gt; <span class=\"number\">1</span>)</div><div class=\"line\">\t\t\t\t\t\tminCount += x * (x - <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tSystem.out.println(minCount + <span class=\"string\">\" \"</span> + maxCount);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["Algorithm"],"tags":["OJ","Algorithm"]},{"title":"Algorithm from NowCoder (2)","url":"http://yoursite.com/2017/03/24/Algorithm-from-NowCoder-2/","content":"<h2 id=\"No-1-回文序列\"><a href=\"#No-1-回文序列\" class=\"headerlink\" title=\"No. 1 回文序列\"></a>No. 1 回文序列</h2><p>如果一个数字序列逆置之后跟原序列是一样的就称这样的数字序列为回文序列。例如：<br>{1, 2, 1}, {15, 78, 78, 15} , {112} 是回文序列,<br>{1, 2, 2}, {15, 78, 87, 51} ,{112, 2, 11} 不是回文序列。<br>现在给出一个数字序列，允许使用一种转换操作：<br>选择任意两个相邻的数，然后从序列移除这两个数，并用这两个数字的和插入到这两个数之前的位置(只插入一个和)。<br>现在对于所给序列要求出最少需要多少次操作可以将其变成回文序列。</p>\n<h3 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入为两行，第一行为序列长度n ( 1 ≤ n ≤ 50)<br>第二行为序列中的n个整数item[i]  (1 ≤ iteam[i] ≤ 1000)，以空格分隔。</p>\n<h3 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一个数，表示最少需要的转换次数</p>\n<h3 id=\"输入例子\"><a href=\"#输入例子\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>4<br>1 1 1 3</p>\n<h3 id=\"输出例子\"><a href=\"#输出例子\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"No-2-优雅的点\"><a href=\"#No-2-优雅的点\" class=\"headerlink\" title=\"No. 2 优雅的点\"></a>No. 2 优雅的点</h2><p>小易有一个圆心在坐标原点的圆，小易知道圆的半径的平方。小易认为在圆上的点而且横纵坐标都是整数的点是优雅的，小易现在想寻找一个算法计算出优雅的点的个数，请你来帮帮他。<br>例如：半径的平方如果为25<br>优雅的点就有：(+/-3, +/-4), (+/-4, +/-3), (0, +/-5) (+/-5, 0)，一共12个点。 </p>\n<h3 id=\"输入描述-1\"><a href=\"#输入描述-1\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入为一个整数，即为圆半径的平方,范围在32位int范围内。</p>\n<h3 id=\"输出描述-1\"><a href=\"#输出描述-1\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出为一个整数，即为优雅的点的个数</p>\n<h3 id=\"输入例子-1\"><a href=\"#输入例子-1\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>25</p>\n<h3 id=\"输出例子-1\"><a href=\"#输出例子-1\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>12</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> radius = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> a = (<span class=\"keyword\">int</span>) Math.sqrt(radius);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = -a; i &lt;= a; i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">double</span> b = Math.sqrt(radius - i * i);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Math.round(b) == b)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (b == <span class=\"number\">0</span>)</div><div class=\"line\">\t\t\t\t\tcount++;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t\t\tcount += <span class=\"number\">2</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(count);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-3-跳石板\"><a href=\"#No-3-跳石板\" class=\"headerlink\" title=\"No. 3 跳石板\"></a>No. 3 跳石板</h2><p>小易来到了一条石板路前，每块石板上从1挨着编号为：1、2、3…….<br>这条石板路要根据特殊的规则才能前进：对于小易当前所在的编号为K的 石板，小易单次只能往前跳K的一个约数(不含1和K)步，即跳到K+X(X为K的一个非1和本身的约数)的位置。 小易当前处在编号为N的石板，他想跳到编号恰好为M的石板去，小易想知道最少需要跳跃几次可以到达。<br>例如：<br>N = 4，M = 24：<br>4-&gt;6-&gt;8-&gt;12-&gt;18-&gt;24<br>于是小易最少需要跳跃5次，就可以从4号石板跳到24号石板 </p>\n<h3 id=\"输入描述-2\"><a href=\"#输入描述-2\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入为一行，有两个整数N，M，以空格隔开。<br>(4 ≤ N ≤ 100000)<br>(N ≤ M ≤ 100000)</p>\n<h3 id=\"输出描述-2\"><a href=\"#输出描述-2\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出小易最少需要跳跃的步数,如果不能到达输出-1</p>\n<h3 id=\"输入例子-2\"><a href=\"#输入例子-2\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>4 24</p>\n<h3 id=\"输出例子-2\"><a href=\"#输出例子-2\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>5</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"No-4-暗黑的字符串\"><a href=\"#No-4-暗黑的字符串\" class=\"headerlink\" title=\"No. 4 暗黑的字符串\"></a>No. 4 暗黑的字符串</h2><p>一个只包含’A’、’B’和’C’的字符串，如果存在某一段长度为3的连续子串中恰好’A’、’B’和’C’各有一个，那么这个字符串就是纯净的，否则这个字符串就是暗黑的。例如：<br>BAACAACCBAAA 连续子串”CBA”中包含了’A’,’B’,’C’各一个，所以是纯净的字符串<br>AABBCCAABB 不存在一个长度为3的连续子串包含’A’,’B’,’C’,所以是暗黑的字符串<br>你的任务就是计算出长度为n的字符串(只包含’A’、’B’和’C’)，有多少个是暗黑的字符串。 </p>\n<h3 id=\"输入描述-3\"><a href=\"#输入描述-3\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入一个整数n，表示字符串长度(1 ≤ n ≤ 30)</p>\n<h3 id=\"输出描述-3\"><a href=\"#输出描述-3\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一个整数表示有多少个暗黑字符串</p>\n<h3 id=\"输入例子-3\"><a href=\"#输入例子-3\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>2<br>3</p>\n<h3 id=\"输出例子-3\"><a href=\"#输出例子-3\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>9<br>21</p>\n<h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"No-5-数字翻转\"><a href=\"#No-5-数字翻转\" class=\"headerlink\" title=\"No. 5 数字翻转\"></a>No. 5 数字翻转</h2><p>对于一个整数X，定义操作rev(X)为将X按数位翻转过来，并且去除掉前导0。例如:<br>如果 X = 123，则rev(X) = 321;<br>如果 X = 100，则rev(X) = 1.<br>现在给出整数x和y,要求rev(rev(x) + rev(y))为多少？ </p>\n<h3 id=\"输入描述-4\"><a href=\"#输入描述-4\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入为一行，x、y(1 ≤ x、y ≤ 1000)，以空格隔开。</p>\n<h3 id=\"输出描述-4\"><a href=\"#输出描述-4\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出rev(rev(x) + rev(y))的值</p>\n<h3 id=\"输入例子-4\"><a href=\"#输入例子-4\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>123 100</p>\n<h3 id=\"输出例子-4\"><a href=\"#输出例子-4\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>223</p>\n<h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> x = sc.nextInt();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> y = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (x &lt; <span class=\"number\">1</span> || y &lt; <span class=\"number\">1</span> || x &gt; <span class=\"number\">1000</span> || y &gt; <span class=\"number\">1000</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(reverse(reverse(x) + reverse(y)));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">reverse</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (a != <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\tresult = result * <span class=\"number\">10</span> + a % <span class=\"number\">10</span>;</div><div class=\"line\">\t\t\ta = a / <span class=\"number\">10</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-6-最大的奇约数\"><a href=\"#No-6-最大的奇约数\" class=\"headerlink\" title=\"No. 6 最大的奇约数\"></a>No. 6 最大的奇约数</h2><p>小易是一个数论爱好者，并且对于一个数的奇数约数十分感兴趣。一天小易遇到这样一个问题： 定义函数f(x)为x最大的奇数约数，x为正整数。 例如:f(44) = 11.<br>现在给出一个N，需要求出 f(1) + f(2) + f(3)…….f(N)<br>例如： N = 7<br>f(1) + f(2) + f(3) + f(4) + f(5) + f(6) + f(7) = 1 + 1 + 3 + 1 + 5 + 3 + 7 = 21<br>小易计算这个问题遇到了困难，需要你来设计一个算法帮助他。 </p>\n<h3 id=\"输入描述-5\"><a href=\"#输入描述-5\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入一个整数N (1 ≤ N ≤ 1000000000)</p>\n<h3 id=\"输出描述-5\"><a href=\"#输出描述-5\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一个整数，即为f(1) + f(2) + f(3)…….f(N)</p>\n<h3 id=\"输入例子-5\"><a href=\"#输入例子-5\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>7</p>\n<h3 id=\"输出例子-5\"><a href=\"#输出例子-5\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>21</p>\n<h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> n = sc.nextLong();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span> || n &gt; <span class=\"number\">1000000000</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">long</span> i = n; i &gt; <span class=\"number\">0</span>; i /= <span class=\"number\">2</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">long</span> temp = (i + <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</div><div class=\"line\">\t\t\tsum += temp * temp;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(sum);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-7-买苹果\"><a href=\"#No-7-买苹果\" class=\"headerlink\" title=\"No. 7 买苹果\"></a>No. 7 买苹果</h2><p>小易去附近的商店买苹果，奸诈的商贩使用了捆绑交易，只提供6个每袋和8个每袋的包装(包装不可拆分)。 可是小易现在只想购买恰好n个苹果，小易想购买尽量少的袋数方便携带。如果不能购买恰好n个苹果，小易将不会购买。 </p>\n<h3 id=\"输入描述-6\"><a href=\"#输入描述-6\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入一个整数n，表示小易想购买n(1 ≤ n ≤ 100)个苹果</p>\n<h3 id=\"输出描述-6\"><a href=\"#输出描述-6\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一个整数表示最少需要购买的袋数，如果不能买恰好n个苹果则输出-1</p>\n<h3 id=\"输入例子-6\"><a href=\"#输入例子-6\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>20</p>\n<h3 id=\"输出例子-6\"><a href=\"#输出例子-6\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>3</p>\n<h3 id=\"代码-6\"><a href=\"#代码-6\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"No-8-计算糖果\"><a href=\"#No-8-计算糖果\" class=\"headerlink\" title=\"No. 8 计算糖果\"></a>No. 8 计算糖果</h2><p>A,B,C三个人是好朋友,每个人手里都有一些糖果,我们不知道他们每个人手上具体有多少个糖果,但是我们知道以下的信息：<br>A - B, B - C, A + B, B + C. 这四个数值.每个字母代表每个人所拥有的糖果数.<br>现在需要通过这四个数值计算出每个人手里有多少个糖果,即A,B,C。这里保证最多只有一组整数A,B,C满足所有题设条件。</p>\n<h3 id=\"输入描述-7\"><a href=\"#输入描述-7\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入为一行，一共4个整数，分别为A - B，B - C，A + B，B + C，用空格隔开。<br>范围均在-30到30之间(闭区间)。</p>\n<h3 id=\"输出描述-7\"><a href=\"#输出描述-7\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出为一行，如果存在满足的整数A，B，C则按顺序输出A，B，C，用空格隔开，行末无空格。<br>如果不存在这样的整数A，B，C，则输出No</p>\n<h3 id=\"输入例子-7\"><a href=\"#输入例子-7\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>1 -2 3 4</p>\n<h3 id=\"输出例子-7\"><a href=\"#输出例子-7\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2 1 3</p>\n<h3 id=\"代码-7\"><a href=\"#代码-7\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>","categories":["Algorithm"],"tags":["OJ","Algorithm"]},{"title":"Algorithm from NowCoder (1)","url":"http://yoursite.com/2017/03/23/Algorithm-from-NowCoder-1/","content":"<h2 id=\"No-1-合唱团\"><a href=\"#No-1-合唱团\" class=\"headerlink\" title=\"No. 1 合唱团\"></a>No. 1 合唱团</h2><p>有 n 个学生站成一排，每个学生有一个能力值，牛牛想从这 n 个学生中按照顺序选取 k 名学生，要求相邻两个学生的位置编号的差不超过 d，使得这 k 个学生的能力值的乘积最大，你能返回最大的乘积吗？ </p>\n<h3 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含 1 个测试用例。每个测试数据的第一行包含一个整数 n (1 &lt;= n &lt;= 50)，表示学生的个数，接下来的一行，包含 n 个整数，按顺序表示每个学生的能力值 ai（-50 &lt;= ai &lt;= 50）。接下来的一行包含两个整数，k 和 d (1 &lt;= k &lt;= 10, 1 &lt;= d &lt;= 50)。</p>\n<h3 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行表示最大的乘积。</p>\n<h3 id=\"输入例子\"><a href=\"#输入例子\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>3<br>7 4 7<br>2 50</p>\n<h3 id=\"输出例子\"><a href=\"#输出例子\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>49</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"No-2-地牢逃脱\"><a href=\"#No-2-地牢逃脱\" class=\"headerlink\" title=\"No. 2 地牢逃脱\"></a>No. 2 地牢逃脱</h2><p>给定一个 n 行 m 列的地牢，其中 ‘.’ 表示可以通行的位置，’X’ 表示不可通行的障碍，牛牛从 (x0 , y0 ) 位置出发，遍历这个地牢，和一般的游戏所不同的是，他每一步只能按照一些指定的步长遍历地牢，要求每一步都不可以超过地牢的边界，也不能到达障碍上。地牢的出口可能在任意某个可以通行的位置上。牛牛想知道最坏情况下，他需要多少步才可以离开这个地牢。 </p>\n<h3 id=\"输入描述-1\"><a href=\"#输入描述-1\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含 1 个测试用例。每个测试用例的第一行包含两个整数 n 和 m（1 &lt;= n, m &lt;= 50），表示地牢的长和宽。接下来的 n 行，每行 m 个字符，描述地牢，地牢将至少包含两个 ‘.’。接下来的一行，包含两个整数 x0, y0，表示牛牛的出发位置（0 &lt;= x0 &lt; n, 0 &lt;= y0 &lt; m，左上角的坐标为 （0, 0），出发位置一定是 ‘.’）。之后的一行包含一个整数 k（0 &lt; k &lt;= 50）表示牛牛合法的步长数，接下来的 k 行，每行两个整数 dx, dy 表示每次可选择移动的行和列步长（-50 &lt;= dx, dy &lt;= 50）</p>\n<h3 id=\"输出描述-1\"><a href=\"#输出描述-1\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行一个数字表示最坏情况下需要多少次移动可以离开地牢，如果永远无法离开，输出 -1。以下测试用例中，牛牛可以上下左右移动，在所有可通行的位置.上，地牢出口如果被设置在右下角，牛牛想离开需要移动的次数最多，为3次。</p>\n<h3 id=\"输入例子-1\"><a href=\"#输入例子-1\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>3 3<br>…<br>…<br>…<br>0 1<br>4<br>1 0<br>0 1<br>-1 0<br>0 -1</p>\n<h3 id=\"输出例子-1\"><a href=\"#输出例子-1\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>3</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"No-3-下厨房\"><a href=\"#No-3-下厨房\" class=\"headerlink\" title=\"No. 3 下厨房\"></a>No. 3 下厨房</h2><p>牛牛想尝试一些新的料理，每个料理需要一些不同的材料，问完成所有的料理需要准备多少种不同的材料。 </p>\n<h3 id=\"输入描述-2\"><a href=\"#输入描述-2\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含 1 个测试用例。每个测试用例的第 i 行，表示完成第 i 件料理需要哪些材料，各个材料用空格隔开，输入只包含大写英文字母和空格，输入文件不超过 50 行，每一行不超过 50 个字符。</p>\n<h3 id=\"输出描述-2\"><a href=\"#输出描述-2\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行一个数字表示完成所有料理需要多少种不同的材料。</p>\n<h3 id=\"输入例子-2\"><a href=\"#输入例子-2\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>BUTTER FLOUR<br>HONEY FLOUR EGG</p>\n<h3 id=\"输出例子-2\"><a href=\"#输出例子-2\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>4</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSet&lt;String&gt; set = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; sc.hasNextLine() &amp;&amp; i &lt;= <span class=\"number\">50</span>; i++)&#123;</div><div class=\"line\">\t\t\tString[] strs = sc.nextLine().split(<span class=\"string\">\" \"</span>);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (String str : strs)</div><div class=\"line\">\t\t\t\tset.add(str);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(set.size());</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-4-分田地\"><a href=\"#No-4-分田地\" class=\"headerlink\" title=\"No. 4 分田地\"></a>No. 4 分田地</h2><p>牛牛和 15 个朋友来玩打土豪分田地的游戏，牛牛决定让你来分田地，地主的田地可以看成是一个矩形，每个位置有一个价值。分割田地的方法是横竖各切三刀，分成 16 份，作为领导干部，牛牛总是会选择其中总价值最小的一份田地， 作为牛牛最好的朋友，你希望牛牛取得的田地的价值和尽可能大，你知道这个值最大可以是多少吗？ </p>\n<h3 id=\"输入描述-3\"><a href=\"#输入描述-3\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含 1 个测试用例。每个测试用例的第一行包含两个整数 n 和 m（1 &lt;= n, m &lt;= 75），表示田地的大小，接下来的 n 行，每行包含 m 个 0-9 之间的数字，表示每块位置的价值。</p>\n<h3 id=\"输出描述-3\"><a href=\"#输出描述-3\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行表示牛牛所能取得的最大的价值。</p>\n<h3 id=\"输入例子-3\"><a href=\"#输入例子-3\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>4 4<br>3332<br>3233<br>3332<br>2323</p>\n<h3 id=\"输出例子-3\"><a href=\"#输出例子-3\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2</p>\n<h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"No-5-分苹果\"><a href=\"#No-5-分苹果\" class=\"headerlink\" title=\"No. 5 分苹果\"></a>No. 5 分苹果</h2><p>n 只奶牛坐在一排，每个奶牛拥有 ai 个苹果，现在你要在它们之间转移苹果，使得最后所有奶牛拥有的苹果数都相同，每一次，你只能从一只奶牛身上拿走恰好两个苹果到另一个奶牛上，问最少需要移动多少次可以平分苹果，如果方案不存在输出 -1。</p>\n<h3 id=\"输入描述-4\"><a href=\"#输入描述-4\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含一个测试用例。每个测试用例的第一行包含一个整数 n（1 &lt;= n &lt;= 100），接下来的一行包含 n 个整数 ai（1 &lt;= ai &lt;= 100）。</p>\n<h3 id=\"输出描述-4\"><a href=\"#输出描述-4\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行表示最少需要移动多少次可以平分苹果，如果方案不存在则输出 -1。</p>\n<h3 id=\"输入例子-4\"><a href=\"#输入例子-4\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>4<br>7 15 9 5</p>\n<h3 id=\"输出例子-4\"><a href=\"#输出例子-4\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>3</p>\n<h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">0</span> || n &gt; <span class=\"number\">100</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\ta[i] = sc.nextInt();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] &lt; <span class=\"number\">1</span> || a[i] &gt; <span class=\"number\">100</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tsum += a[i];</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (sum % a.length != <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(-<span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> avg = sum / a.length;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> move = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.length; i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Math.abs(a[i] - avg) % <span class=\"number\">2</span> != <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(-<span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] &gt; avg)</div><div class=\"line\">\t\t\t\tmove += a[i] - avg;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(move / <span class=\"number\">2</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-6-星际穿越\"><a href=\"#No-6-星际穿越\" class=\"headerlink\" title=\"No. 6 星际穿越\"></a>No. 6 星际穿越</h2><p>航天飞行器是一项复杂而又精密的仪器，飞行器的损耗主要集中在发射和降落的过程，科学家根据实验数据估计，如果在发射过程中，产生了 x 程度的损耗，那么在降落的过程中就会产生 x2 程度的损耗，如果飞船的总损耗超过了它的耐久度，飞行器就会爆炸坠毁。问一艘耐久度为 h 的飞行器，假设在飞行过程中不产生损耗，那么为了保证其可以安全的到达目的地，只考虑整数解，至多发射过程中可以承受多少程度的损耗？ </p>\n<h3 id=\"输入描述-5\"><a href=\"#输入描述-5\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含一个测试用例。每个测试用例包含一行一个整数 h （1 &lt;= h &lt;= 10^18）。</p>\n<h3 id=\"输出描述-5\"><a href=\"#输出描述-5\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行一个整数表示结果。</p>\n<h3 id=\"输入例子-5\"><a href=\"#输入例子-5\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>10</p>\n<h3 id=\"输出例子-5\"><a href=\"#输出例子-5\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2</p>\n<h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> h = sc.nextLong();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (h &lt; <span class=\"number\">0</span> || h &gt; Math.pow(<span class=\"number\">10</span>, <span class=\"number\">18</span>))</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> x = (<span class=\"keyword\">long</span>) Math.sqrt(h);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (; x &gt;= <span class=\"number\">0</span>; x--)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x * x + x &lt;= h)&#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(x);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-7-藏宝图\"><a href=\"#No-7-藏宝图\" class=\"headerlink\" title=\"No. 7 藏宝图\"></a>No. 7 藏宝图</h2><p>牛牛拿到了一个藏宝图，顺着藏宝图的指示，牛牛发现了一个藏宝盒，藏宝盒上有一个机关，机关每次会显示两个字符串 s 和 t，根据古老的传说，牛牛需要每次都回答 t 是否是 s 的子序列。注意，子序列不要求在原字符串中是连续的，例如串 abc，它的子序列就有 {空串, a, b, c, ab, ac, bc, abc} 8 种。 </p>\n<h3 id=\"输入描述-6\"><a href=\"#输入描述-6\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含一个测试用例。每个测试用例包含两行长度不超过 10 的不包含空格的可见 ASCII 字符串。</p>\n<h3 id=\"输出描述-6\"><a href=\"#输出描述-6\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行 “Yes” 或者 “No” 表示结果。</p>\n<h3 id=\"输入例子-6\"><a href=\"#输入例子-6\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>x.nowcoder.com<br>ooo</p>\n<h3 id=\"输出例子-6\"><a href=\"#输出例子-6\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>Yes</p>\n<h3 id=\"代码-6\"><a href=\"#代码-6\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tString s = sc.nextLine();</div><div class=\"line\">\t\tString t = sc.nextLine();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span> || t == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"No\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; t.length() &amp;&amp; j &lt; s.length(); j++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (t.charAt(i) == s.charAt(j))</div><div class=\"line\">\t\t\t\ti++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (i == t.length())</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"Yes\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> </div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"No\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-8-藏宝图\"><a href=\"#No-8-藏宝图\" class=\"headerlink\" title=\"No. 8 藏宝图\"></a>No. 8 藏宝图</h2><p>牛牛的作业薄上有一个长度为 n 的排列 A，这个排列包含了从1到n的n个数，但是因为一些原因，其中有一些位置（不超过 10 个）看不清了，但是牛牛记得这个数列顺序对的数量是 k，顺序对是指满足 i &lt; j 且 A[i] &lt; A[j] 的对数，请帮助牛牛计算出，符合这个要求的合法排列的数目。 </p>\n<h3 id=\"输入描述-7\"><a href=\"#输入描述-7\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含一个测试用例。每个测试用例的第一行包含两个整数 n 和 k（1 &lt;= n &lt;= 100, 0 &lt;= k &lt;= 1000000000），接下来的 1 行，包含 n 个数字表示排列 A，其中等于0的项表示看不清的位置（不超过 10 个）。</p>\n<h3 id=\"输出描述-7\"><a href=\"#输出描述-7\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行表示合法的排列数目。</p>\n<h3 id=\"输入例子-7\"><a href=\"#输入例子-7\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>5 5<br>4 0 0 2 0</p>\n<h3 id=\"输出例子-7\"><a href=\"#输出例子-7\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2</p>\n<h3 id=\"代码-7\"><a href=\"#代码-7\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div></pre></td></tr></table></figure>","categories":["Algorithm"],"tags":["OJ","Algorithm"]},{"title":"DL Intro","url":"http://yoursite.com/2017/03/20/DL-Intro/","content":"<p>A brief introduction about deep learning, which will cover models, libraries and so on.</p>\n<h2 id=\"Deep-Learning-Models\"><a href=\"#Deep-Learning-Models\" class=\"headerlink\" title=\"Deep Learning Models\"></a>Deep Learning Models</h2><ol>\n<li>Restricted Boltzmann Machine (RBM)</li>\n<li>Deep Belief Network (DBN)</li>\n<li>Convolutional Neural Net</li>\n<li>Recurrent Nets<ul>\n<li>Gating units (LSTM, GRU)</li>\n<li>Gradient clipping</li>\n<li>Steeper gates</li>\n<li>Better optimizers</li>\n</ul>\n</li>\n<li>Autoencoders</li>\n<li>Recursive Neural Tensor Nets</li>\n</ol>\n<h2 id=\"Use-Cases\"><a href=\"#Use-Cases\" class=\"headerlink\" title=\"Use Cases\"></a>Use Cases</h2><ol>\n<li>Machine Vision<ul>\n<li>Image Classification</li>\n<li>Object Recognition: <a href=\"https://www.clarifai.com\" target=\"_blank\" rel=\"external\">clarifai</a></li>\n<li>Video Recognition</li>\n</ul>\n</li>\n<li>Speech Recognition</li>\n<li>Text Processing<ul>\n<li>Fact Extraction</li>\n<li>Machine Translation</li>\n<li>Sentiment Analysis: metamind</li>\n<li>Character level text processing</li>\n</ul>\n</li>\n<li>Medical<ul>\n<li>Cancer detection</li>\n<li>Drug discovery</li>\n<li>Radiology</li>\n</ul>\n</li>\n<li>Finance</li>\n<li>Digital advertising</li>\n<li>Fraud detection</li>\n<li>Customer intel</li>\n</ol>\n<h2 id=\"How-to-choose-a-deep-net\"><a href=\"#How-to-choose-a-deep-net\" class=\"headerlink\" title=\"How to choose a deep net ?\"></a>How to choose a deep net ?</h2><h3 id=\"Unlabelled\"><a href=\"#Unlabelled\" class=\"headerlink\" title=\"Unlabelled\"></a>Unlabelled</h3><p>Feature Extraction<br>Unsupervised Learning<br>Pattern Recognition</p>\n<ol>\n<li>RBM</li>\n<li>Autoencoders</li>\n</ol>\n<h3 id=\"Labelled\"><a href=\"#Labelled\" class=\"headerlink\" title=\"Labelled\"></a>Labelled</h3><ol>\n<li>Text Processing: RNTN, Recurrent Net</li>\n<li>Image Recognition: DBN, Convolutional Net</li>\n<li>Object Recognition: RNTN, Convolutional Net</li>\n<li>Speech Recognition: Recurrent Net</li>\n</ol>\n<h3 id=\"General\"><a href=\"#General\" class=\"headerlink\" title=\"General\"></a>General</h3><ol>\n<li>Classification: MLP/RELU, Deep Belief Net</li>\n<li>Time Series Analysis: Recurrent Net</li>\n</ol>\n<h2 id=\"Deep-Net-Platform\"><a href=\"#Deep-Net-Platform\" class=\"headerlink\" title=\"Deep Net Platform\"></a>Deep Net Platform</h2><p>Deep Net Capability<br>Data Munging<br>UI/Model Management<br>Infrastructure</p>\n<h3 id=\"Pros-amp-Cons\"><a href=\"#Pros-amp-Cons\" class=\"headerlink\" title=\"Pros &amp; Cons\"></a>Pros &amp; Cons</h3><ul>\n<li>Pros: Hyper-parameter configuration through UI, no need to learn to code</li>\n<li>Cons: Constrained by platform functionality</li>\n</ul>\n<h3 id=\"Platforms\"><a href=\"#Platforms\" class=\"headerlink\" title=\"Platforms\"></a>Platforms</h3><ol>\n<li><a href=\"http://www.h2o.ai\" target=\"_blank\" rel=\"external\">H2O.ai</a></li>\n<li><a href=\"https://turi.com\" target=\"_blank\" rel=\"external\">Dato GraphLab Create</a></li>\n</ol>\n<h2 id=\"Deep-Learning-Libraries\"><a href=\"#Deep-Learning-Libraries\" class=\"headerlink\" title=\"Deep Learning Libraries\"></a>Deep Learning Libraries</h2><h3 id=\"Pros-amp-Cons-1\"><a href=\"#Pros-amp-Cons-1\" class=\"headerlink\" title=\"Pros &amp; Cons\"></a>Pros &amp; Cons</h3><ul>\n<li>Pros: Increased flexibility and options</li>\n<li>Cons: Need to know code</li>\n</ul>\n<h3 id=\"Libraries\"><a href=\"#Libraries\" class=\"headerlink\" title=\"Libraries\"></a>Libraries</h3><ol>\n<li>Theano<ul>\n<li>Python Library</li>\n<li>Libraries: Blocks, Lasagne/Keras, Passage</li>\n</ul>\n</li>\n<li>Deeplearning4j<ul>\n<li>Features: Canova</li>\n<li>Iterative Map-Reduce</li>\n</ul>\n</li>\n<li>Torch<ul>\n<li>LuaJIT Library</li>\n<li>Hyper-parameter Config</li>\n<li>Extensions: CuTorch, NN, Cephes, DP, NNGraph</li>\n</ul>\n</li>\n<li>Caffe<ul>\n<li>C++ Library, Matlab/Python Interface</li>\n<li>Features: Hyper-parameter Config, Model Zoo</li>\n<li>Performance: Vectorization through blobs</li>\n</ul>\n</li>\n<li>TensorFlow<ul>\n<li>Computational Graph</li>\n<li>Variables, Sub-expressions, Differentiation</li>\n<li>Data Parallelism, Model Parallelism</li>\n<li>OpenCL</li>\n<li>TensorBoard</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Configure-a-Deep-Net\"><a href=\"#Configure-a-Deep-Net\" class=\"headerlink\" title=\"Configure a Deep Net\"></a>Configure a Deep Net</h2><ol>\n<li>Layers<ul>\n<li>Input Layer</li>\n<li>Convolution / Pooling</li>\n<li>Matrix operations</li>\n<li>Output Layer</li>\n</ul>\n</li>\n<li>Neurons<ul>\n<li>Growing</li>\n<li>Pruning</li>\n</ul>\n</li>\n<li>Activations: Sigmoid, Tanh, ReLU</li>\n<li>Regularization</li>\n<li>Gating</li>\n<li>Learning Rate: Adagrad, RMSprop, Adadelta</li>\n<li>Initialization</li>\n<li>Training Time: raise the number of training epochs</li>\n</ol>\n<h2 id=\"How-good-is-your-fit\"><a href=\"#How-good-is-your-fit\" class=\"headerlink\" title=\"How good is your fit ?\"></a>How good is your fit ?</h2><ol>\n<li>Underfitting</li>\n<li>Overfitting<ul>\n<li>3 Way Data Split</li>\n<li>Regularization</li>\n<li>Max Norm Constraints</li>\n<li>Dropout </li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Metrics\"><a href=\"#Metrics\" class=\"headerlink\" title=\"Metrics\"></a>Metrics</h2><p>F1 score</p>\n<h3 id=\"Confusion-Matrix\"><a href=\"#Confusion-Matrix\" class=\"headerlink\" title=\"Confusion Matrix\"></a>Confusion Matrix</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">Predicted True</th>\n<th style=\"text-align:center\">Predicted False</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Actual True</td>\n<td style=\"text-align:center\">TP</td>\n<td style=\"text-align:center\">FN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Actual False</td>\n<td style=\"text-align:center\">FP</td>\n<td style=\"text-align:center\">TN</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Recall\"><a href=\"#Recall\" class=\"headerlink\" title=\"Recall\"></a>Recall</h3><p>TP / (TP + FN)</p>\n<h3 id=\"Precision\"><a href=\"#Precision\" class=\"headerlink\" title=\"Precision\"></a>Precision</h3><p>TP / (TP + FP)</p>\n<h2 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h2><h3 id=\"Hardware-level\"><a href=\"#Hardware-level\" class=\"headerlink\" title=\"Hardware level\"></a>Hardware level</h3><p>Parallel processing</p>\n<ul>\n<li>Shared memory: GPU, FPGA, ASIC</li>\n<li>Distributed computing: data parallelism, model parallelism, pipeline parallelism</li>\n</ul>\n<h3 id=\"Software-level\"><a href=\"#Software-level\" class=\"headerlink\" title=\"Software level\"></a>Software level</h3><p>Parallel programming</p>\n<ul>\n<li>Model</li>\n<li>Algorithm</li>\n<li>Implementation</li>\n</ul>\n<h2 id=\"NLP\"><a href=\"#NLP\" class=\"headerlink\" title=\"NLP\"></a>NLP</h2><p>Lemmatization<br>Named Entity Recognition<br>Part of Speech Tagging<br>Syntactic Parsing<br>Fact Extraction<br>Sentiment Analysis<br>Machine Translation</p>\n<h3 id=\"Models-to-solve-the-problem-of-One-Hot-Vector\"><a href=\"#Models-to-solve-the-problem-of-One-Hot-Vector\" class=\"headerlink\" title=\"Models to solve the problem of One-Hot Vector\"></a>Models to solve the problem of One-Hot Vector</h3><ol>\n<li>Continuous Bag of Words</li>\n<li>Skip grams</li>\n</ol>\n<h3 id=\"Tools-for-converting-words-to-vectors\"><a href=\"#Tools-for-converting-words-to-vectors\" class=\"headerlink\" title=\"Tools for converting words to vectors\"></a>Tools for converting words to vectors</h3><ol>\n<li>word2vec</li>\n<li>GloVe</li>\n</ol>\n<h2 id=\"Applications\"><a href=\"#Applications\" class=\"headerlink\" title=\"Applications\"></a>Applications</h2><ol>\n<li>Fashion Matching with Indico<ul>\n<li>Transfer Learning</li>\n<li>Custom Collection API</li>\n</ul>\n</li>\n<li>Neural Storyteller with Somatic<ul>\n<li>skip-thought model</li>\n<li>MSCOCO Dataset, Book Corpus</li>\n</ul>\n</li>\n<li>Inceptionism with Somatic<ul>\n<li>Generation</li>\n<li>Convolutional Nets</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Reinforcement-Learning\"><a href=\"#Reinforcement-Learning\" class=\"headerlink\" title=\"Reinforcement Learning\"></a>Reinforcement Learning</h2><p>Explore a tradeoff between exploration and exploitation and choose a path to maximum the expected reward</p>\n<ul>\n<li>High score</li>\n<li>Follow rules: + points</li>\n<li>Break rules: - points</li>\n</ul>\n<ol>\n<li>Deep Atari<ul>\n<li>Regression</li>\n<li>No pooling</li>\n</ul>\n</li>\n<li>Deep Q Net (DQN)</li>\n</ol>\n","categories":["Deep Learning"],"tags":["Deep Learning"]},{"title":"Torch Demo","url":"http://yoursite.com/2017/03/18/Torch-Demo/","content":"<p>We have <strong><em>5 steps</em></strong> to do in training a torch neural network.</p>\n<blockquote><p><em>(1) Load and normalize data; </em><br><em>(2) Define Neural Network; </em><br><em>(3) Define Loss function; </em><br><em>(4) Train network on training data; </em><br><em>(5) Test network on test data. </em></p>\n<footer><strong>Tutorial</strong><cite><a href=\"https://github.com/soumith/cvpr2015/blob/master/Deep%20Learning%20with%20Torch.ipynb\" target=\"_blank\" rel=\"external\">cvpr2015/Deep Learning with Torch.ipynb</a></cite></footer></blockquote>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'paths'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'nn'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'torch'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'cunn'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'cutorch'</span></div></pre></td></tr></table></figure>\n<h3 id=\"Load-and-normalize-data\"><a href=\"#Load-and-normalize-data\" class=\"headerlink\" title=\"Load and normalize data\"></a>Load and normalize data</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">not</span> paths.filep(<span class=\"string\">\"cifar10torchsmall.zip\"</span>)) <span class=\"keyword\">then</span></div><div class=\"line\">    os.execute(<span class=\"string\">'wget -c https://s3.amazonaws.com/torch7/data/cifar10torchsmall.zip'</span>)</div><div class=\"line\">    os.execute(<span class=\"string\">'unzip cifar10torchsmall.zip'</span>)</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"></div><div class=\"line\">trainset = torch.<span class=\"built_in\">load</span>(<span class=\"string\">'cifar10-train.t7'</span>)</div><div class=\"line\">testset = torch.<span class=\"built_in\">load</span>(<span class=\"string\">'cifar10-test.t7'</span>)</div><div class=\"line\">classes = &#123;<span class=\"string\">'airplane'</span>, <span class=\"string\">'automobile'</span>, <span class=\"string\">'bird'</span>, <span class=\"string\">'cat'</span>,</div><div class=\"line\">           <span class=\"string\">'deer'</span>, <span class=\"string\">'dog'</span>, <span class=\"string\">'frog'</span>, <span class=\"string\">'horse'</span>, <span class=\"string\">'ship'</span>, <span class=\"string\">'truck'</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">setmetatable</span>(trainset,</div><div class=\"line\">    &#123;<span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t, i)</span></span></div><div class=\"line\">                   <span class=\"keyword\">return</span> &#123;t.data[i], t.label[i]&#125;</div><div class=\"line\">               <span class=\"keyword\">end</span>&#125;</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trainset:size</span><span class=\"params\">()</span></span></div><div class=\"line\">    <span class=\"keyword\">return</span> self.data:size(<span class=\"number\">1</span>)</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">trainset.data = trainset.data:double()</div><div class=\"line\">testset.data = testset.data:double()</div><div class=\"line\"></div><div class=\"line\">mean = &#123;&#125;</div><div class=\"line\">stdv  = &#123;&#125;</div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></div><div class=\"line\">    mean[i] = trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:mean()</div><div class=\"line\">    <span class=\"comment\">--print('Channel ' .. i .. ', Mean: ' .. mean[i])</span></div><div class=\"line\">    trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:add(-mean[i])   </div><div class=\"line\">    stdv[i] = trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:std()</div><div class=\"line\">    <span class=\"comment\">--print('Channel ' .. i .. ', Standard Deviation: ' .. stdv[i])</span></div><div class=\"line\">    trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:div(stdv[i])</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></div><div class=\"line\">     testset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125; &#125;]:add(-mean[i])</div><div class=\"line\">     testset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125; &#125;]:div(stdv[i])</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<h3 id=\"Define-neural-network\"><a href=\"#Define-neural-network\" class=\"headerlink\" title=\"Define neural network\"></a>Define neural network</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">net = nn.Sequential()</div><div class=\"line\">net:add(nn.SpatialConvolution(<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>)) <span class=\"comment\">-- 3 input image channels, 6 output channels, 5x5 convolution kernel</span></div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.SpatialMaxPooling(<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>))     <span class=\"comment\">-- A max-pooling operation that looks at 2x2 windows and finds the max.</span></div><div class=\"line\">net:add(nn.SpatialConvolution(<span class=\"number\">6</span>, <span class=\"number\">16</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>))</div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.SpatialMaxPooling(<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>))</div><div class=\"line\">net:add(nn.View(<span class=\"number\">16</span>*<span class=\"number\">5</span>*<span class=\"number\">5</span>))                   <span class=\"comment\">-- reshapes from a 3D tensor of 16x5x5 into 1D tensor of 16*5*5</span></div><div class=\"line\">net:add(nn.Linear(<span class=\"number\">16</span>*<span class=\"number\">5</span>*<span class=\"number\">5</span>, <span class=\"number\">120</span>))            <span class=\"comment\">-- fully connected layer (matrix multiplication between input and weights)</span></div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.Linear(<span class=\"number\">120</span>, <span class=\"number\">84</span>))</div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.Linear(<span class=\"number\">84</span>, <span class=\"number\">10</span>))                 <span class=\"comment\">-- 10 is the number of outputs of the network (in this case, 10 digits)</span></div><div class=\"line\">net:add(nn.LogSoftMax())                   <span class=\"comment\">-- converts the output to a log-probability. Useful for classification problems</span></div></pre></td></tr></table></figure>\n<h3 id=\"Define-the-Loss-function\"><a href=\"#Define-the-Loss-function\" class=\"headerlink\" title=\"Define the Loss function\"></a>Define the Loss function</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">criterion = nn.ClassNLLCriterion()</div></pre></td></tr></table></figure>\n<h3 id=\"Train-the-neural-network\"><a href=\"#Train-the-neural-network\" class=\"headerlink\" title=\"Train the neural network\"></a>Train the neural network</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">trainer = nn.StochasticGradient(net, criterion)</div><div class=\"line\">trainer.learningRate = <span class=\"number\">0.001</span></div><div class=\"line\">trainer.maxIteration = <span class=\"number\">5</span></div><div class=\"line\">trainer:train(trainset)</div></pre></td></tr></table></figure>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">-- train on GPU</span></div><div class=\"line\">net = net:cuda()</div><div class=\"line\">criterion = criterion:cuda()</div><div class=\"line\">trainset.data = trainset.data:cuda()</div><div class=\"line\">trainset.label = trainset.label:cuda()</div><div class=\"line\">testset.data = testset.data:cuda()</div><div class=\"line\">testset.label = testset.label:cuda()</div></pre></td></tr></table></figure>\n<h3 id=\"Test-the-network-print-accuracy\"><a href=\"#Test-the-network-print-accuracy\" class=\"headerlink\" title=\"Test the network, print accuracy\"></a>Test the network, print accuracy</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">correct = <span class=\"number\">0</span></div><div class=\"line\">class_performance = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;</div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">10000</span> <span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"keyword\">local</span> groundtruth = testset.label[i]</div><div class=\"line\">    <span class=\"keyword\">local</span> prediction = net:forward(testset.data[i])</div><div class=\"line\">    <span class=\"keyword\">local</span> confidences, indices = torch.sort(prediction, <span class=\"literal\">true</span>)  <span class=\"comment\">-- true means sort in descending order</span></div><div class=\"line\">    <span class=\"keyword\">if</span> groundtruth == indices[<span class=\"number\">1</span>] <span class=\"keyword\">then</span></div><div class=\"line\">        correct = correct + <span class=\"number\">1</span></div><div class=\"line\">        class_performance[groundtruth] = class_performance[groundtruth] + <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(correct, <span class=\"number\">100</span>*correct/<span class=\"number\">10000</span> .. <span class=\"string\">\" % \"</span>)</div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#classes <span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"built_in\">print</span>(classes[i], <span class=\"number\">100</span>*class_performance[i]/<span class=\"number\">1000</span> .. <span class=\"string\">' %'</span>)</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p>It’ll take around 30 minutes to get the result on CPU. However, it’ll cost less than 10 minutes on GPU.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">th filename.lua</div></pre></td></tr></table></figure>\n<h3 id=\"On-CPU\"><a href=\"#On-CPU\" class=\"headerlink\" title=\"On CPU\"></a>On CPU</h3><p><img src=\"http://p1.bqimg.com/4851/2292e852a2790f62.png\" alt=\"cpu\"></p>\n<h3 id=\"On-GPU\"><a href=\"#On-GPU\" class=\"headerlink\" title=\"On GPU\"></a>On GPU</h3><p><img src=\"http://p1.bqimg.com/4851/d63d92b0f0d14405.png\" alt=\"gpu\"></p>\n","categories":["Deep Learning"],"tags":["Deep Learning","Torch"]},{"title":"Hello World","url":"http://yoursite.com/2017/03/17/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"<p>I’m a postgraduate student in the School of Software Engineering at Tongji University.<br>I’m mainly interested in deep learning, especially applied to computer vision.</p>\n<p><a href=\"/files/MaTianyao_CV.pdf\">Download my resume!</a></p>\n","categories":[],"tags":[]},{"title":"categories","url":"http://yoursite.com/categories/index.html","content":"","categories":[],"tags":[]},{"title":"tags","url":"http://yoursite.com/tags/index.html","content":"","categories":[],"tags":[]}]