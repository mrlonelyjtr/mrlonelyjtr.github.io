[{"title":"Algorithm from NowCoder (1)","url":"http://yoursite.com/2017/03/23/Algorithm from NowCoder (1)/","content":"<h2 id=\"No-5\"><a href=\"#No-5\" class=\"headerlink\" title=\"No. 5\"></a>No. 5</h2><p>n 只奶牛坐在一排，每个奶牛拥有 ai 个苹果，现在你要在它们之间转移苹果，使得最后所有奶牛拥有的苹果数都相同，每一次，你只能从一只奶牛身上拿走恰好两个苹果到另一个奶牛上，问最少需要移动多少次可以平分苹果，如果方案不存在输出 -1。</p>\n<h3 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含一个测试用例。每个测试用例的第一行包含一个整数 n（1 &lt;= n &lt;= 100），接下来的一行包含 n 个整数 ai（1 &lt;= ai &lt;= 100）。</p>\n<h3 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行表示最少需要移动多少次可以平分苹果，如果方案不存在则输出 -1。</p>\n<h3 id=\"输入例子\"><a href=\"#输入例子\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>4<br>7 15 9 5</p>\n<h3 id=\"输出例子\"><a href=\"#输出例子\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>3</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">0</span> || n &gt; <span class=\"number\">100</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</div><div class=\"line\">\t\t\ta[i] = sc.nextInt();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] &lt; <span class=\"number\">1</span> || a[i] &gt; <span class=\"number\">100</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tsum += a[i];</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (sum % a.length != <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(-<span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> avg = sum / a.length;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> move = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; a.length; i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Math.abs(a[i] - avg) % <span class=\"number\">2</span> != <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(-<span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[i] &gt; avg)</div><div class=\"line\">\t\t\t\tmove += a[i] - avg;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tSystem.out.println(move / <span class=\"number\">2</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-6\"><a href=\"#No-6\" class=\"headerlink\" title=\"No. 6\"></a>No. 6</h2><p>航天飞行器是一项复杂而又精密的仪器，飞行器的损耗主要集中在发射和降落的过程，科学家根据实验数据估计，如果在发射过程中，产生了 x 程度的损耗，那么在降落的过程中就会产生 x2 程度的损耗，如果飞船的总损耗超过了它的耐久度，飞行器就会爆炸坠毁。问一艘耐久度为 h 的飞行器，假设在飞行过程中不产生损耗，那么为了保证其可以安全的到达目的地，只考虑整数解，至多发射过程中可以承受多少程度的损耗？ </p>\n<h3 id=\"输入描述-1\"><a href=\"#输入描述-1\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含一个测试用例。每个测试用例包含一行一个整数 h （1 &lt;= h &lt;= 10^18）。</p>\n<h3 id=\"输出描述-1\"><a href=\"#输出描述-1\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行一个整数表示结果。</p>\n<h3 id=\"输入例子-1\"><a href=\"#输入例子-1\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>10</p>\n<h3 id=\"输出例子-1\"><a href=\"#输出例子-1\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>2</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> h = sc.nextLong();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (h &lt; <span class=\"number\">0</span> || h &gt; Math.pow(<span class=\"number\">10</span>, <span class=\"number\">18</span>))</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> x = (<span class=\"keyword\">long</span>) Math.sqrt(h);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (; x &gt;= <span class=\"number\">0</span>; x--)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (x * x + x &lt;= h)&#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(x);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"No-7\"><a href=\"#No-7\" class=\"headerlink\" title=\"No. 7\"></a>No. 7</h2><p>牛牛拿到了一个藏宝图，顺着藏宝图的指示，牛牛发现了一个藏宝盒，藏宝盒上有一个机关，机关每次会显示两个字符串 s 和 t，根据古老的传说，牛牛需要每次都回答 t 是否是 s 的子序列。注意，子序列不要求在原字符串中是连续的，例如串 abc，它的子序列就有 {空串, a, b, c, ab, ac, bc, abc} 8 种。 </p>\n<h3 id=\"输入描述-2\"><a href=\"#输入描述-2\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>每个输入包含一个测试用例。每个测试用例包含两行长度不超过 10 的不包含空格的可见 ASCII 字符串。</p>\n<h3 id=\"输出描述-2\"><a href=\"#输出描述-2\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出一行 “Yes” 或者 “No” 表示结果。</p>\n<h3 id=\"输入例子-2\"><a href=\"#输入例子-2\" class=\"headerlink\" title=\"输入例子\"></a>输入例子</h3><p>x.nowcoder.com<br>ooo</p>\n<h3 id=\"输出例子-2\"><a href=\"#输出例子-2\" class=\"headerlink\" title=\"输出例子\"></a>输出例子</h3><p>Yes</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tString s = sc.nextLine();</div><div class=\"line\">\t\tString t = sc.nextLine();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span> || t == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"No\"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; t.length() &amp;&amp; j &lt; s.length(); j++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (t.charAt(i) == s.charAt(j))</div><div class=\"line\">\t\t\t\ti++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (i == t.length())</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"Yes\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> </div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"No\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["Algorithm"],"tags":["OJ","Algorithm"]},{"title":"DL Intro","url":"http://yoursite.com/2017/03/20/DL-Intro/","content":"<p>A brief introduction about deep learning, which will cover models, libraries and so on.</p>\n<h2 id=\"Deep-Learning-Models\"><a href=\"#Deep-Learning-Models\" class=\"headerlink\" title=\"Deep Learning Models\"></a>Deep Learning Models</h2><ol>\n<li>Restricted Boltzmann Machine (RBM)</li>\n<li>Deep Belief Network (DBN)</li>\n<li>Convolutional Neural Net</li>\n<li>Recurrent Nets<ul>\n<li>Gating units (LSTM, GRU)</li>\n<li>Gradient clipping</li>\n<li>Steeper gates</li>\n<li>Better optimizers</li>\n</ul>\n</li>\n<li>Autoencoders</li>\n<li>Recursive Neural Tensor Nets</li>\n</ol>\n<h2 id=\"Use-Cases\"><a href=\"#Use-Cases\" class=\"headerlink\" title=\"Use Cases\"></a>Use Cases</h2><ol>\n<li>Machine Vision<ul>\n<li>Image Classification</li>\n<li>Object Recognition: <a href=\"https://www.clarifai.com\" target=\"_blank\" rel=\"external\">clarifai</a></li>\n<li>Video Recognition</li>\n</ul>\n</li>\n<li>Speech Recognition</li>\n<li>Text Processing<ul>\n<li>Fact Extraction</li>\n<li>Machine Translation</li>\n<li>Sentiment Analysis: metamind</li>\n<li>Character level text processing</li>\n</ul>\n</li>\n<li>Medical<ul>\n<li>Cancer detection</li>\n<li>Drug discovery</li>\n<li>Radiology</li>\n</ul>\n</li>\n<li>Finance</li>\n<li>Digital advertising</li>\n<li>Fraud detection</li>\n<li>Customer intel</li>\n</ol>\n<h2 id=\"How-to-choose-a-deep-net\"><a href=\"#How-to-choose-a-deep-net\" class=\"headerlink\" title=\"How to choose a deep net ?\"></a>How to choose a deep net ?</h2><h3 id=\"Unlabelled\"><a href=\"#Unlabelled\" class=\"headerlink\" title=\"Unlabelled\"></a>Unlabelled</h3><p>Feature Extraction<br>Unsupervised Learning<br>Pattern Recognition</p>\n<ol>\n<li>RBM</li>\n<li>Autoencoders</li>\n</ol>\n<h3 id=\"Labelled\"><a href=\"#Labelled\" class=\"headerlink\" title=\"Labelled\"></a>Labelled</h3><ol>\n<li>Text Processing: RNTN, Recurrent Net</li>\n<li>Image Recognition: DBN, Convolutional Net</li>\n<li>Object Recognition: RNTN, Convolutional Net</li>\n<li>Speech Recognition: Recurrent Net</li>\n</ol>\n<h3 id=\"General\"><a href=\"#General\" class=\"headerlink\" title=\"General\"></a>General</h3><ol>\n<li>Classification: MLP/RELU, Deep Belief Net</li>\n<li>Time Series Analysis: Recurrent Net</li>\n</ol>\n<h2 id=\"Deep-Net-Platform\"><a href=\"#Deep-Net-Platform\" class=\"headerlink\" title=\"Deep Net Platform\"></a>Deep Net Platform</h2><p>Deep Net Capability<br>Data Munging<br>UI/Model Management<br>Infrastructure</p>\n<h3 id=\"Pros-amp-Cons\"><a href=\"#Pros-amp-Cons\" class=\"headerlink\" title=\"Pros &amp; Cons\"></a>Pros &amp; Cons</h3><ul>\n<li>Pros: Hyper-parameter configuration through UI, no need to learn to code</li>\n<li>Cons: Constrained by platform functionality</li>\n</ul>\n<h3 id=\"Platforms\"><a href=\"#Platforms\" class=\"headerlink\" title=\"Platforms\"></a>Platforms</h3><ol>\n<li><a href=\"http://www.h2o.ai\" target=\"_blank\" rel=\"external\">H2O.ai</a></li>\n<li><a href=\"https://turi.com\" target=\"_blank\" rel=\"external\">Dato GraphLab Create</a></li>\n</ol>\n<h2 id=\"Deep-Learning-Libraries\"><a href=\"#Deep-Learning-Libraries\" class=\"headerlink\" title=\"Deep Learning Libraries\"></a>Deep Learning Libraries</h2><h3 id=\"Pros-amp-Cons-1\"><a href=\"#Pros-amp-Cons-1\" class=\"headerlink\" title=\"Pros &amp; Cons\"></a>Pros &amp; Cons</h3><ul>\n<li>Pros: Increased flexibility and options</li>\n<li>Cons: Need to know code</li>\n</ul>\n<h3 id=\"Libraries\"><a href=\"#Libraries\" class=\"headerlink\" title=\"Libraries\"></a>Libraries</h3><ol>\n<li>Theano<ul>\n<li>Python Library</li>\n<li>Libraries: Blocks, Lasagne/Keras, Passage</li>\n</ul>\n</li>\n<li>Deeplearning4j<ul>\n<li>Features: Canova</li>\n<li>Iterative Map-Reduce</li>\n</ul>\n</li>\n<li>Torch<ul>\n<li>LuaJIT Library</li>\n<li>Hyper-parameter Config</li>\n<li>Extensions: CuTorch, NN, Cephes, DP, NNGraph</li>\n</ul>\n</li>\n<li>Caffe<ul>\n<li>C++ Library, Matlab/Python Interface</li>\n<li>Features: Hyper-parameter Config, Model Zoo</li>\n<li>Performance: Vectorization through blobs</li>\n</ul>\n</li>\n<li>TensorFlow<ul>\n<li>Computational Graph</li>\n<li>Variables, Sub-expressions, Differentiation</li>\n<li>Data Parallelism, Model Parallelism</li>\n<li>OpenCL</li>\n<li>TensorBoard</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Configure-a-Deep-Net\"><a href=\"#Configure-a-Deep-Net\" class=\"headerlink\" title=\"Configure a Deep Net\"></a>Configure a Deep Net</h2><ol>\n<li>Layers<ul>\n<li>Input Layer</li>\n<li>Convolution / Pooling</li>\n<li>Matrix operations</li>\n<li>Output Layer</li>\n</ul>\n</li>\n<li>Neurons<ul>\n<li>Growing</li>\n<li>Pruning</li>\n</ul>\n</li>\n<li>Activations: Sigmoid, Tanh, ReLU</li>\n<li>Regularization</li>\n<li>Gating</li>\n<li>Learning Rate: Adagrad, RMSprop, Adadelta</li>\n<li>Initialization</li>\n<li>Training Time: raise the number of training epochs</li>\n</ol>\n<h2 id=\"How-good-is-your-fit\"><a href=\"#How-good-is-your-fit\" class=\"headerlink\" title=\"How good is your fit ?\"></a>How good is your fit ?</h2><ol>\n<li>Underfitting</li>\n<li>Overfitting<ul>\n<li>3 Way Data Split</li>\n<li>Regularization</li>\n<li>Max Norm Constraints</li>\n<li>Dropout </li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Metrics\"><a href=\"#Metrics\" class=\"headerlink\" title=\"Metrics\"></a>Metrics</h2><p>F1 score</p>\n<h3 id=\"Confusion-Matrix\"><a href=\"#Confusion-Matrix\" class=\"headerlink\" title=\"Confusion Matrix\"></a>Confusion Matrix</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">Predicted True</th>\n<th style=\"text-align:center\">Predicted False</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Actual True</td>\n<td style=\"text-align:center\">TP</td>\n<td style=\"text-align:center\">FN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Actual False</td>\n<td style=\"text-align:center\">FP</td>\n<td style=\"text-align:center\">TN</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Recall\"><a href=\"#Recall\" class=\"headerlink\" title=\"Recall\"></a>Recall</h3><p>TP / (TP + FN)</p>\n<h3 id=\"Precision\"><a href=\"#Precision\" class=\"headerlink\" title=\"Precision\"></a>Precision</h3><p>TP / (TP + FP)</p>\n<h2 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h2><h3 id=\"Hardware-level\"><a href=\"#Hardware-level\" class=\"headerlink\" title=\"Hardware level\"></a>Hardware level</h3><p>Parallel processing</p>\n<ul>\n<li>Shared memory: GPU, FPGA, ASIC</li>\n<li>Distributed computing: data parallelism, model parallelism, pipeline parallelism</li>\n</ul>\n<h3 id=\"Software-level\"><a href=\"#Software-level\" class=\"headerlink\" title=\"Software level\"></a>Software level</h3><p>Parallel programming</p>\n<ul>\n<li>Model</li>\n<li>Algorithm</li>\n<li>Implementation</li>\n</ul>\n<h2 id=\"NLP\"><a href=\"#NLP\" class=\"headerlink\" title=\"NLP\"></a>NLP</h2><p>Lemmatization<br>Named Entity Recognition<br>Part of Speech Tagging<br>Syntactic Parsing<br>Fact Extraction<br>Sentiment Analysis<br>Machine Translation</p>\n<h3 id=\"Models-to-solve-the-problem-of-One-Hot-Vector\"><a href=\"#Models-to-solve-the-problem-of-One-Hot-Vector\" class=\"headerlink\" title=\"Models to solve the problem of One-Hot Vector\"></a>Models to solve the problem of One-Hot Vector</h3><ol>\n<li>Continuous Bag of Words</li>\n<li>Skip grams</li>\n</ol>\n<h3 id=\"Tools-for-converting-words-to-vectors\"><a href=\"#Tools-for-converting-words-to-vectors\" class=\"headerlink\" title=\"Tools for converting words to vectors\"></a>Tools for converting words to vectors</h3><ol>\n<li>word2vec</li>\n<li>GloVe</li>\n</ol>\n<h2 id=\"Applications\"><a href=\"#Applications\" class=\"headerlink\" title=\"Applications\"></a>Applications</h2><ol>\n<li>Fashion Matching with Indico<ul>\n<li>Transfer Learning</li>\n<li>Custom Collection API</li>\n</ul>\n</li>\n<li>Neural Storyteller with Somatic<ul>\n<li>skip-thought model</li>\n<li>MSCOCO Dataset, Book Corpus</li>\n</ul>\n</li>\n<li>Inceptionism with Somatic<ul>\n<li>Generation</li>\n<li>Convolutional Nets</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"Reinforcement-Learning\"><a href=\"#Reinforcement-Learning\" class=\"headerlink\" title=\"Reinforcement Learning\"></a>Reinforcement Learning</h2><p>Explore a tradeoff between exploration and exploitation and choose a path to maximum the expected reward</p>\n<ul>\n<li>High score</li>\n<li>Follow rules: + points</li>\n<li>Break rules: - points</li>\n</ul>\n<ol>\n<li>Deep Atari<ul>\n<li>Regression</li>\n<li>No pooling</li>\n</ul>\n</li>\n<li>Deep Q Net (DQN)</li>\n</ol>\n","categories":["Deep Learning"],"tags":["Deep Learning"]},{"title":"Torch Demo","url":"http://yoursite.com/2017/03/18/Torch-Demo/","content":"<p>We have <strong><em>5 steps</em></strong> to do in training a torch neural network.</p>\n<blockquote><p><em>(1) Load and normalize data; </em><br><em>(2) Define Neural Network; </em><br><em>(3) Define Loss function; </em><br><em>(4) Train network on training data; </em><br><em>(5) Test network on test data. </em></p>\n<footer><strong>Tutorial</strong><cite><a href=\"https://github.com/soumith/cvpr2015/blob/master/Deep%20Learning%20with%20Torch.ipynb\" target=\"_blank\" rel=\"external\">cvpr2015/Deep Learning with Torch.ipynb</a></cite></footer></blockquote>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'paths'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'nn'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'torch'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'cunn'</span></div><div class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">'cutorch'</span></div></pre></td></tr></table></figure>\n<h3 id=\"Load-and-normalize-data\"><a href=\"#Load-and-normalize-data\" class=\"headerlink\" title=\"Load and normalize data\"></a>Load and normalize data</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">not</span> paths.filep(<span class=\"string\">\"cifar10torchsmall.zip\"</span>)) <span class=\"keyword\">then</span></div><div class=\"line\">    os.execute(<span class=\"string\">'wget -c https://s3.amazonaws.com/torch7/data/cifar10torchsmall.zip'</span>)</div><div class=\"line\">    os.execute(<span class=\"string\">'unzip cifar10torchsmall.zip'</span>)</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"></div><div class=\"line\">trainset = torch.<span class=\"built_in\">load</span>(<span class=\"string\">'cifar10-train.t7'</span>)</div><div class=\"line\">testset = torch.<span class=\"built_in\">load</span>(<span class=\"string\">'cifar10-test.t7'</span>)</div><div class=\"line\">classes = &#123;<span class=\"string\">'airplane'</span>, <span class=\"string\">'automobile'</span>, <span class=\"string\">'bird'</span>, <span class=\"string\">'cat'</span>,</div><div class=\"line\">           <span class=\"string\">'deer'</span>, <span class=\"string\">'dog'</span>, <span class=\"string\">'frog'</span>, <span class=\"string\">'horse'</span>, <span class=\"string\">'ship'</span>, <span class=\"string\">'truck'</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">setmetatable</span>(trainset,</div><div class=\"line\">    &#123;<span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t, i)</span></span></div><div class=\"line\">                   <span class=\"keyword\">return</span> &#123;t.data[i], t.label[i]&#125;</div><div class=\"line\">               <span class=\"keyword\">end</span>&#125;</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trainset:size</span><span class=\"params\">()</span></span></div><div class=\"line\">    <span class=\"keyword\">return</span> self.data:size(<span class=\"number\">1</span>)</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">trainset.data = trainset.data:double()</div><div class=\"line\">testset.data = testset.data:double()</div><div class=\"line\"></div><div class=\"line\">mean = &#123;&#125;</div><div class=\"line\">stdv  = &#123;&#125;</div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></div><div class=\"line\">    mean[i] = trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:mean()</div><div class=\"line\">    <span class=\"comment\">--print('Channel ' .. i .. ', Mean: ' .. mean[i])</span></div><div class=\"line\">    trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:add(-mean[i])   </div><div class=\"line\">    stdv[i] = trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:std()</div><div class=\"line\">    <span class=\"comment\">--print('Channel ' .. i .. ', Standard Deviation: ' .. stdv[i])</span></div><div class=\"line\">    trainset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125;  &#125;]:div(stdv[i])</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></div><div class=\"line\">     testset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125; &#125;]:add(-mean[i])</div><div class=\"line\">     testset.data[&#123; &#123;&#125;, &#123;i&#125;, &#123;&#125;, &#123;&#125; &#125;]:div(stdv[i])</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<h3 id=\"Define-neural-network\"><a href=\"#Define-neural-network\" class=\"headerlink\" title=\"Define neural network\"></a>Define neural network</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">net = nn.Sequential()</div><div class=\"line\">net:add(nn.SpatialConvolution(<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>)) <span class=\"comment\">-- 3 input image channels, 6 output channels, 5x5 convolution kernel</span></div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.SpatialMaxPooling(<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>))     <span class=\"comment\">-- A max-pooling operation that looks at 2x2 windows and finds the max.</span></div><div class=\"line\">net:add(nn.SpatialConvolution(<span class=\"number\">6</span>, <span class=\"number\">16</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>))</div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.SpatialMaxPooling(<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>))</div><div class=\"line\">net:add(nn.View(<span class=\"number\">16</span>*<span class=\"number\">5</span>*<span class=\"number\">5</span>))                   <span class=\"comment\">-- reshapes from a 3D tensor of 16x5x5 into 1D tensor of 16*5*5</span></div><div class=\"line\">net:add(nn.Linear(<span class=\"number\">16</span>*<span class=\"number\">5</span>*<span class=\"number\">5</span>, <span class=\"number\">120</span>))            <span class=\"comment\">-- fully connected layer (matrix multiplication between input and weights)</span></div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.Linear(<span class=\"number\">120</span>, <span class=\"number\">84</span>))</div><div class=\"line\">net:add(nn.ReLU())                         <span class=\"comment\">-- non-linearity</span></div><div class=\"line\">net:add(nn.Linear(<span class=\"number\">84</span>, <span class=\"number\">10</span>))                 <span class=\"comment\">-- 10 is the number of outputs of the network (in this case, 10 digits)</span></div><div class=\"line\">net:add(nn.LogSoftMax())                   <span class=\"comment\">-- converts the output to a log-probability. Useful for classification problems</span></div></pre></td></tr></table></figure>\n<h3 id=\"Define-the-Loss-function\"><a href=\"#Define-the-Loss-function\" class=\"headerlink\" title=\"Define the Loss function\"></a>Define the Loss function</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">criterion = nn.ClassNLLCriterion()</div></pre></td></tr></table></figure>\n<h3 id=\"Train-the-neural-network\"><a href=\"#Train-the-neural-network\" class=\"headerlink\" title=\"Train the neural network\"></a>Train the neural network</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">trainer = nn.StochasticGradient(net, criterion)</div><div class=\"line\">trainer.learningRate = <span class=\"number\">0.001</span></div><div class=\"line\">trainer.maxIteration = <span class=\"number\">5</span></div><div class=\"line\">trainer:train(trainset)</div></pre></td></tr></table></figure>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">-- train on GPU</span></div><div class=\"line\">net = net:cuda()</div><div class=\"line\">criterion = criterion:cuda()</div><div class=\"line\">trainset.data = trainset.data:cuda()</div><div class=\"line\">trainset.label = trainset.label:cuda()</div><div class=\"line\">testset.data = testset.data:cuda()</div><div class=\"line\">testset.label = testset.label:cuda()</div></pre></td></tr></table></figure>\n<h3 id=\"Test-the-network-print-accuracy\"><a href=\"#Test-the-network-print-accuracy\" class=\"headerlink\" title=\"Test the network, print accuracy\"></a>Test the network, print accuracy</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">correct = <span class=\"number\">0</span></div><div class=\"line\">class_performance = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;</div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">10000</span> <span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"keyword\">local</span> groundtruth = testset.label[i]</div><div class=\"line\">    <span class=\"keyword\">local</span> prediction = net:forward(testset.data[i])</div><div class=\"line\">    <span class=\"keyword\">local</span> confidences, indices = torch.sort(prediction, <span class=\"literal\">true</span>)  <span class=\"comment\">-- true means sort in descending order</span></div><div class=\"line\">    <span class=\"keyword\">if</span> groundtruth == indices[<span class=\"number\">1</span>] <span class=\"keyword\">then</span></div><div class=\"line\">        correct = correct + <span class=\"number\">1</span></div><div class=\"line\">        class_performance[groundtruth] = class_performance[groundtruth] + <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(correct, <span class=\"number\">100</span>*correct/<span class=\"number\">10000</span> .. <span class=\"string\">\" % \"</span>)</div><div class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#classes <span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"built_in\">print</span>(classes[i], <span class=\"number\">100</span>*class_performance[i]/<span class=\"number\">1000</span> .. <span class=\"string\">' %'</span>)</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n<h2 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h2><p>It’ll take around 30 minutes to get the result on CPU. However, it’ll cost less than 10 minutes on GPU.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">th filename.lua</div></pre></td></tr></table></figure>\n<h3 id=\"On-CPU\"><a href=\"#On-CPU\" class=\"headerlink\" title=\"On CPU\"></a>On CPU</h3><p><img src=\"http://p1.bqimg.com/4851/2292e852a2790f62.png\" alt=\"cpu\"></p>\n<h3 id=\"On-GPU\"><a href=\"#On-GPU\" class=\"headerlink\" title=\"On GPU\"></a>On GPU</h3><p><img src=\"http://p1.bqimg.com/4851/d63d92b0f0d14405.png\" alt=\"gpu\"></p>\n","categories":["Deep Learning"],"tags":["Deep Learning","Torch"]},{"title":"Hello World","url":"http://yoursite.com/2017/03/17/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"categories","url":"http://yoursite.com/categories/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"<p>I’m a postgraduate student in the School of Software Engineering at Tongji University.<br>I’m mainly interested in deep learning, especially applied to computer vision.</p>\n<p><a href=\"/files/MaTianyao_CV.pdf\">Download my resume!</a></p>\n","categories":[],"tags":[]},{"title":"tags","url":"http://yoursite.com/tags/index.html","content":"","categories":[],"tags":[]}]